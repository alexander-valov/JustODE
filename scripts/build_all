#!/bin/bash

# Input parameters
IS_UPDATE_VERSION=true
IS_GENERATE_SINGLE_HEADER=true
ROOT_FOLDER=".."
CMAKE_BUILD_TYPE=Release
IS_INSTALL=false
CMAKE_CXX_COMPILER=g++
CMAKE_CXX_FLAGS="-m64 -Wall -pedantic"

# Update version
if [ "$IS_UPDATE_VERSION" = true ]; then
    printf %"s\n" "-------------------------------------------------------"
    printf "Updating version:\n\n"
    python update_version.py
    printf %"s\n\n" "-------------------------------------------------------"
fi

# Generate single header version
if [ "$IS_GENERATE_SINGLE_HEADER" = true ]; then
    printf %"s\n" "-------------------------------------------------------"
    printf "Single header generation:\n\n"
    source generate_single_header
    printf %"s\n" "-------------------------------------------------------"
fi

# Build project
cmake -S $ROOT_FOLDER -B $ROOT_FOLDER/build/$CMAKE_BUILD_TYPE \
    -DCMAKE_CXX_COMPILER=$CMAKE_CXX_COMPILER \
    -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
    -DCMAKE_INSTALL_PREFIX=$ROOT_FOLDER/build_install/$CMAKE_BUILD_TYPE \
    -DJUST_ODE_BUILD_TESTS=ON \
    -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS"
cmake --build $ROOT_FOLDER/build/$CMAKE_BUILD_TYPE --parallel 6

# Install project
if [ "$IS_INSTALL" = true ]; then
    cmake --install $ROOT_FOLDER/build/$CMAKE_BUILD_TYPE
fi

# Run tests
cd $ROOT_FOLDER/build/$CMAKE_BUILD_TYPE
ctest
cd ../..
